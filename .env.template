# BTD Payment Service Environment Template
# Generated: 2025-10-23
# Purpose: Database credential isolation for payment service

# Database Configuration - Service Isolated Credentials
# Development: Use URL-encoded password with special characters
DATABASE_URL=postgresql://payment_user:Pay%23Secure%242025%25Pass!9Xk4Tn@10.27.27.70:5432/btd_payments

# Production: Use environment variable or secrets manager
# DATABASE_URL=${PAYMENT_DATABASE_URL}
# Or use separate components:
# DB_HOST=10.27.27.70
# DB_PORT=5432
# DB_NAME=btd_payments
# DB_USER=payment_user
# DB_PASSWORD=<encrypted-in-secrets-manager>

# Service Configuration
NODE_ENV=production
HOST=10.27.27.90
PORT=3500
GRPC_PORT=50055
SERVICE_VERSION=1.0.0

# Service Discovery
CONSUL_HOST=10.27.27.27
CONSUL_PORT=8500

# Redis Configuration
REDIS_HOST=10.27.27.71
REDIS_PORT=6379
REDIS_PASSWORD=

# Stripe Configuration (Production)
STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}

# Payment Processing
PAYMENT_RETRY_ATTEMPTS=3
PAYMENT_TIMEOUT_MS=30000
REFUND_WINDOW_DAYS=30

# Security Keys
JWT_SECRET=${JWT_SECRET}
INTERNAL_SERVICE_KEY=${INTERNAL_SERVICE_KEY}

# Logging
LOG_LEVEL=info

# Notes:
# - This service has isolated database credentials (payment_user)
# - No cross-database access is allowed
# - Password contains special characters that must be URL-encoded
# - For production, use secrets management system (Vault, AWS Secrets Manager)
# - Rotate credentials quarterly as per security policy
# - Stripe keys must be set via environment variables or secrets manager
